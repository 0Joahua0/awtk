import os
import copy

BIN_DIR=os.environ['BIN_DIR'];
LIB_DIR=os.environ['LIB_DIR'];

sources=Glob('base/*.c') +\
  Glob('ui_loader/*.c') + \
  Glob('xml/*.c') + \
  Glob('font/*.c') + \
  Glob('image_loader/*.c') + \
  ['platforms/platform_default.c', 'lftk.c'];

if os.environ['LCD'] == 'NANOVG':
  sources += Glob('vgcanvas/vgcanvas_nanovg.c')
  sources += ['animator/window_animator_nanovg.c'];
  sources += ['lcd/lcd_nanovg.c', 'lcd/lcd_mem_rgba.c', 'main_loop/main_loop_nanovg.c'];
else:
  sources += Glob('vgcanvas/vgcanvas_agg.cpp')
  sources += ['lcd/lcd_sdl2.c', 'lcd/lcd_mem_rgba.c', 'main_loop/main_loop_sdl2.c']

env=DefaultEnvironment().Clone()
env.Library(os.path.join(LIB_DIR, 'lftk'), sources)
env.Program(os.path.join(BIN_DIR, 'mem_test'), ["base/mem_test.cc"])
