import os
import copy

BIN_DIR=os.environ['BIN_DIR'];
LIB_DIR=os.environ['LIB_DIR'];

sources=Glob('base/*.c') +\
  Glob('ui_loader/*.c') + \
  Glob('xml/*.c') + \
  Glob('font/*.c') + \
  Glob('blend/*.c') + \
  Glob('ext_widgets/*.c') + \
  Glob('ext_widgets/*/*.c') + \
  Glob('image_loader/*.c') + \
  Glob('widget_animators/*.c') + \
  Glob('platforms/pc/*.c') + \
  Glob('misc/*.cpp') + \
  ['awtk.c'];

sources += ['main_loop/main_loop_simple.c'];
if os.environ['LCD'] == 'NANOVG':
  sources += ['window_animators/window_animator_nanovg.c'];
  sources += ['lcd/lcd_nanovg.c', 'main_loop/main_loop_nanovg.c'];
elif os.environ['LCD'] == 'SDL':
  sources += ['window_animators/window_animator_fb.c'];
  sources += ['lcd/lcd_sdl2.c', 'main_loop/main_loop_sdl2.c']
else:
  sources += ['window_animators/window_animator_fb.c'];

sources += ['lcd/lcd_mem_rgba8888.c'];
sources += ['lcd/lcd_mem_rgb565.c'];

if os.environ['VGCANVAS'] == 'NANOVG':
  sources += Glob('vgcanvas/vgcanvas_nanovg.c')
elif os.environ['VGCANVAS'] == 'AGG':
  sources += Glob('vgcanvas/vgcanvas_agg.cpp')
else:
  sources += Glob('vgcanvas/vgcanvas_picasso.cpp')

if os.environ['INPUT_METHOD'] == 'native':
  sources += Glob('input_methods/input_method_sdl.c')
else:
  sources += Glob('input_methods/input_method_default.c')

if os.environ['INPUT_ENGINE'] == 'null':
  sources += Glob('input_engines/input_engine_null.c')
else:
  sources += Glob('input_engines/input_engine_pinyin.cpp')

env=DefaultEnvironment().Clone()
env.Library(os.path.join(LIB_DIR, 'awtk'), sources)
